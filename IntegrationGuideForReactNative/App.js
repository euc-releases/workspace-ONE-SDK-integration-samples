/**
 * Sample React Native App
 *
 * adapted from App.js generated by the following command:
 *
 * react-native init example
 *
 * https://github.com/facebook/react-native
 */

// Copyright 2022 VMware, Inc.
// SPDX-License-Identifier: BSD-2-Clause

import 'react-native-gesture-handler';
import React, { Component, useState } from 'react';
import { NativeEventEmitter,Platform,NativeModules, StyleSheet, Text, View ,LogBox, Button, Alert,FlatList,TouchableOpacity} from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createStackNavigator } from '@react-navigation/stack';
import List from './components/List'
import Information from './components/Information'
import CustomSettings from './components/CustomSettings'
import DLPSettings from './components/DLPSettings'
import DLPTest from './components/DLPTest'
import { event } from 'react-native-reanimated';

import { WebView } from 'react-native-webview';
import { TextInput } from 'react-native-gesture-handler';
const Root = createStackNavigator()

const HomeScreen = ({ navigation, route }) => (
  <View style={styles.screen}>
      
      <List
        items={DATA}
        onPressItem={(item) => {
          if (item.id == 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba')
          {
            navigation.push('InformationScreen')
          }
          else if  (item.id == '3ac68afc-c605-48d3-a4f8-fbd91aa97f63')
          {
            navigation.push('TunnelingScreen')
          }
          else if  (item.id == '58694a0f-3da1-471f-bd96-145571e29d72')
          {
            navigation.push('AuthenticationScreen')
          }
          else if (item.id == 'bd7acbea-c1b1-46c2-aed5-3ad53abb28b1')
          {
            navigation.push('CustomSettings')
          }
          else if (item.id == '3ac68afc-c605-48d3-a4f8-fbd91aa97f62')
          {
            navigation.push('DLPSettings')
          }
          else if (item.id == '3ac68afc-c605-48d3-a4f8-fbd91aa97123')
          {
            navigation.push('DLPTest')
          }
        }}
      />
    
  </View>
)


function AuthenticationScreen  ({ navigation, route }) {
  const [postText, setPostText] = React.useState('');
  return (
    <View>
      <TextInput
        multiline
        placeholder="Enter the url with http/https"
        style={{fontSize: 20, height: 40, margin: 10,  backgroundColor: 'white' }}
        value={postText}
        onChangeText={setPostText}
      />
      <Button
        title="Go"
        onPress={() => {
          // Pass params back to home screen
          navigation.navigate('Authentication', { post: postText });
        }}
      />
    </View>
  )
}

function Authentication  ({navigation, route})  {

  console.log("Url : ",route.params?.post);
  return(
    <WebView source={{ uri: route.params?.post }} /> 
  )
}

function TunnelingScreen  ({ navigation, route }) {
  const [postText, setPostText] = React.useState('');
  return (
    <View>
      <TextInput
        multiline
        placeholder="Enter the url with http/https"
        style={{fontSize: 20, height: 40, margin: 10,  backgroundColor: 'white' }}
        value={postText}
        onChangeText={setPostText}
      />
      <Button
        title="Go"
        onPress={() => {
          // Pass params back to home screen
          navigation.navigate('Tunneling', { post: postText });
        }}
      />
    </View>
  )
}

function Tunneling  ({navigation, route})  {

  console.log("Url : ",route.params?.post);
  return(
    <WebView source={{ uri: route.params?.post }} /> 
  )
}
//import WorkspaceOneSdk from 'react-native-workspace-one-sdk';
const {WorkspaceOneSdk } = NativeModules;

const DATA = [
  {
    id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',
    title: 'Information',
    desc: 'Provides user related information',
  },
  {
    id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',
    title: 'Tunneling',
    desc: 'Access your internal websites or APIs',
  },
  {
    id: '58694a0f-3da1-471f-bd96-145571e29d72',
    title: 'Authentication',
    desc: 'Automated local and network authentication',
  },
  {
    id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28b1',
    title: 'Remote Config',
    desc: 'Push configurations and settings to the app',
  },
  {
    id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f62',
    title: 'Data Loss Protection',
    desc: 'Data loss prevention capabilities',
  },
  // {
  //   id: '3ac68afc-c605-48d3-a4f8-fbd91aa97123',
  //   title: 'Data Loss Protection Test',
  //   desc: 'Data loss prevention capabilities Test',
  // },
];

const Item = ({ title, desc }) => (
  <View style={styles.item}>
    <Text style={styles.title}>{title}</Text>
    <Text style={styles.desc}>{desc}</Text>
  </View>
);

const renderItem = ({ item }) => (
  <TouchableOpacity onPress={ () => actionOnRow(item)}>
     <Item title={item.title} desc={item.desc}/>
  </TouchableOpacity>
);

const actionOnRow = ({item}) =>{

     Alert.alert('Simple Button pressed ' + item);

};

export default class App extends Component {

  
  
  componentDidMount() {

    WorkspaceOneSdk.startSDK()
      const eventEmitter = new NativeEventEmitter(NativeModules.WorkspaceOneSdk);
      this.eventListner = eventEmitter.addListener('initSuccess',(event) => {
        console.log("SDK Init Success",event);
      });
      this.eventListner = eventEmitter.addListener('initFailure',(event) => {
        console.log("SDK Init Failed",event);
      });
  }
  
  render() {
    return (
    <NavigationContainer>
      <Root.Navigator>
        <Root.Screen name="HomeScreen" component={HomeScreen} />
        <Root.Screen name="InformationScreen" component={Information} />
        <Root.Screen name="TunnelingScreen" component={TunnelingScreen} />
        <Root.Screen name="Tunneling" component={Tunneling} />
        <Root.Screen name="AuthenticationScreen" component= {AuthenticationScreen}/>
        <Root.Screen name="Authentication" component= {Authentication}/>
        <Root.Screen name="CustomSettings" component={CustomSettings} />
        <Root.Screen name="DLPSettings" component={DLPSettings} />
        <Root.Screen name="DLPTest" component={DLPTest} />
      </Root.Navigator>
    </NavigationContainer>
      
    );
  }

  
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
  },
  welcome: {
    fontSize: 32,
    textAlign: 'center',
    margin: 10,
  },
  instructions: {
    textAlign: 'center',
    color: '#333333',
    marginBottom: 5,
  },
  item: {
    backgroundColor: '#cccccc',
    padding: 5,
    marginVertical: 8,
    marginHorizontal: 16,
  },
  title: {
    fontSize: 24,
    color: '#000000',
  },
  desc: {
    fontSize: 16,
    color: '#000000',
  },
});
